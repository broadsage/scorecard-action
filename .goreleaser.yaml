# GoReleaser configuration for scorecard-action
# GitHub Action release automation
# https://goreleaser.com

version: 2

project_name: scorecard-action

# Since this is a GitHub Action (not a binary), we skip builds
builds:
  - skip: true

# Release configuration
release:
  github:
    owner: broadsage
    name: scorecard-action
  
  disable: false
  draft: false
  prerelease: auto
  mode: replace
  
  # Release name template
  name_template: "{{.Tag}}"
  
  footer: |
    ## üôè Contributors
    
    Thanks to everyone who contributed to this release!
    
    **Full Changelog**: https://github.com/broadsage/scorecard-action/compare/{{.PreviousTag}}...{{.Tag}}
    
    ### Usage
    ```yaml
    - uses: broadsage/scorecard-action@{{.Version}}
    ```

# Changelog configuration - use GoReleaser's built-in changelog
changelog:
  use: github
  groups:
    - title: üöÄ Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: üêõ Bug Fixes
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: üîß Other Changes
      regexp: "^.*$"
      order: 999
  
  # Filter out bots and automated accounts
  filters:
    exclude:
      - "^.*github-actions\\[bot\\].*"
      - "^.*dependabot\\[bot\\].*"
      - "^.*renovate\\[bot\\].*"
  
# Git configuration
git:
  tag_sort: -version:refname

# Archives - package action files for releases
archives:
  - id: scorecard-action-archive
    name_template: "{{ .ProjectName }}_{{ .Version }}"
    
    # Include all action-related files
    files:
      - action.yml
      - README.md
      - LICENSE
      - examples/**/*

# Announce configuration (optional)
announce:
  # Skip announcement for now - can be configured later
  skip: true

# Milestone management
milestones:
  - close: true
    fail_on_error: false
    name_template: "{{ .Tag }}"

# Environment variables for release
env:
  - GORELEASER_CURRENT_TAG={{ .Tag }}
  - GORELEASER_PREVIOUS_TAG={{ .PreviousTag }}
    
# Sign releases with cosign (optional - for security)
signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: "${artifact}.pem"
    args:
      - "sign-blob"
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: all
    output: true
