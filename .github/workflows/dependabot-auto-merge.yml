# SPDX-FileCopyrightText: Copyright (c) 2025 Broadsage Corporation <containers@broadsage.com>
#
# SPDX-License-Identifier: Apache-2.0

---
name: "Dependabot Auto-Merge"

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]

# Use restrictive default permissions
permissions:
  contents: read

jobs:
  dependabot-auto-merge:
    runs-on: ubuntu-latest
    name: Auto-merge Dependabot PRs
    # Explicit job-level permissions following least privilege principle
    permissions:
      contents: write # Required for merging PRs
      pull-requests: write # Required for approving and merging PRs
      checks: read # Required to read check status
    if: |
      github.actor == 'dependabot[bot]' &&
      contains(github.event.pull_request.labels.*.name, 'dependencies') &&
      github.event.pull_request.draft == false
    
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Wait for checks to complete
        uses: lewagon/wait-on-check-action@0dceb95e7c4cad8cc7422aee3885998f5cab9c79 # v1.4.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: "Dependabot Auto-Merge / dependabot-auto-merge"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success,neutral,skipped
        continue-on-error: true
        id: wait-for-checks

      - name: Check if ready for merge
        if: steps.wait-for-checks.outcome == 'success' || steps.wait-for-checks.outcome == 'skipped'
        run: echo "✅ Basic validation passed, proceeding with auto-merge"

      - name: Skip auto-merge if checks failed
        if: steps.wait-for-checks.outcome != 'success' && steps.wait-for-checks.outcome != 'skipped'
        run: |
          echo "⚠️ Checks did not pass or timed out, skipping auto-merge"
          echo "This is likely due to permission issues or failing tests"
          exit 0

      - name: Approve Dependabot PR
        if: steps.wait-for-checks.outcome == 'success' || steps.wait-for-checks.outcome == 'skipped'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            try {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                event: 'APPROVE',
                body: '✅ Auto-approved dependabot PR for scorecard action dependencies'
              });
              console.log('✅ Successfully approved PR');
            } catch (error) {
              console.log('⚠️ Error approving PR:', error.message);
              // Don't fail the workflow for approval errors
            }

      - name: Enable auto-merge
        if: steps.wait-for-checks.outcome == 'success' || steps.wait-for-checks.outcome == 'skipped'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                merge_method: 'squash',
                commit_title: `${context.payload.pull_request.title} (#${context.issue.number})`,
                commit_message: 'Auto-merged by Dependabot workflow for scorecard action'
              });
              console.log('✅ Successfully merged PR');
            } catch (error) {
              console.log('❌ Error merging PR:', error.message);
              if (error.message.includes('workflows permission')) {
                console.log('💡 This may be due to missing workflows permission for GitHub Apps');
                console.log('💡 Check repository Settings > Actions > General > Workflow permissions');
              }
              throw error;
            }