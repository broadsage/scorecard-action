name: Auto-merge Dependabot PRs

on:
  pull_request_target:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
      - name: Check PR Details
        id: pr-check
        run: |
          echo "PR Title: ${{ github.event.pull_request.title }}"
          echo "PR Author: ${{ github.event.pull_request.user.login }}"
          echo "PR Labels: ${{ join(github.event.pull_request.labels.*.name, ', ') }}"
          
          # Determine if this is a safe auto-merge candidate
          TITLE="${{ github.event.pull_request.title }}"
          
          # Safe patterns for auto-merge
          if [[ "$TITLE" =~ ^chore.*security-actions.*patch|minor ]] || \
             [[ "$TITLE" =~ ^chore.*infrastructure-actions.*patch|minor ]] || \
             [[ "$TITLE" =~ ^chore.*actions/(checkout|upload-artifact|download-artifact|cache|setup-) ]] || \
             [[ "$TITLE" =~ patch|security ]]; then
            echo "auto_merge=true" >> $GITHUB_OUTPUT
            echo "reason=Safe infrastructure or security patch update" >> $GITHUB_OUTPUT
          else
            echo "auto_merge=false" >> $GITHUB_OUTPUT  
            echo "reason=Major update or integration action - requires review" >> $GITHUB_OUTPUT
          fi
      
      - name: Wait for CI Checks
        if: steps.pr-check.outputs.auto_merge == 'true'
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "CI"
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 600
          intervalSeconds: 30
        continue-on-error: true
      
      - name: Auto-merge Safe Updates
        if: |
          steps.pr-check.outputs.auto_merge == 'true' && 
          (steps.wait-for-checks.outputs.conclusion == 'success' || 
           steps.wait-for-checks.outcome == 'skipped')
        run: |
          echo "ü§ñ Auto-merging safe Dependabot update"
          echo "Reason: ${{ steps.pr-check.outputs.reason }}"
          
          # Enable auto-merge with squash
          gh pr merge ${{ github.event.pull_request.number }} \
            --squash \
            --auto \
            --delete-branch \
            --subject "ü§ñ ${{ github.event.pull_request.title }}" \
            --body "Auto-merged safe dependency update by Dependabot.
          
          ‚úÖ **Safety Checks Passed:**
          - Dependabot-created PR ‚úì
          - Safe update pattern detected ‚úì  
          - CI checks passed ‚úì
          
          **Update Details:**
          - Type: ${{ steps.pr-check.outputs.reason }}
          - Will trigger automated release workflow
          
          *This PR was automatically merged as it meets safety criteria for infrastructure/security updates.*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add Review Request for Manual Updates  
        if: steps.pr-check.outputs.auto_merge == 'false'
        run: |
          echo "üîç Manual review required for this update"
          echo "Reason: ${{ steps.pr-check.outputs.reason }}"
          
          # Add comment explaining why manual review is needed
          gh pr comment ${{ github.event.pull_request.number }} --body "## üîç Manual Review Required

          This Dependabot update requires manual review because:
          **${{ steps.pr-check.outputs.reason }}**

          ### üìã Review Checklist:
          - [ ] Verify breaking changes in release notes
          - [ ] Test compatibility with current workflows  
          - [ ] Check for API changes or deprecations
          - [ ] Validate security implications
          
          ### ‚ö° Auto-merge Criteria:
          The following updates are auto-merged when CI passes:
          - ‚úÖ Infrastructure actions (checkout, upload-artifact, etc.) - patch/minor
          - ‚úÖ Security actions (scorecard, codeql) - patch/minor  
          - ‚úÖ Patch/security updates for all actions
          
          Major version updates always require manual review for breaking changes."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Record Auto-merge Metrics
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          AUTO_MERGE_DECISION: ${{ steps.pr-check.outputs.auto_merge }}
          DECISION_REASON: ${{ steps.pr-check.outputs.reason }}
        run: |
          # Record auto-merge decision for metrics
          mkdir -p metrics
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          MERGE_DATA=$(cat <<EOF
          {
            "timestamp": "$TIMESTAMP",
            "event_type": "auto_merge_decision",
            "pr_number": $PR_NUMBER,
            "pr_title": "$PR_TITLE",
            "auto_merge_approved": $AUTO_MERGE_DECISION,
            "decision_reason": "$DECISION_REASON",
            "repository": "${{ github.repository }}"
          }
          EOF
          )
          echo "$MERGE_DATA" >> metrics/automation_events.jsonl
          echo "üìä Auto-merge metrics recorded"

      - name: Summary
        run: |
          if [[ "${{ steps.pr-check.outputs.auto_merge }}" == "true" ]]; then
            echo "## ü§ñ Auto-merge Decision: APPROVED" >> $GITHUB_STEP_SUMMARY
            echo "**Reason:** ${{ steps.pr-check.outputs.reason }}" >> $GITHUB_STEP_SUMMARY
            echo "**Action:** PR will be auto-merged after CI completion" >> $GITHUB_STEP_SUMMARY
          else
            echo "## üîç Auto-merge Decision: MANUAL REVIEW REQUIRED" >> $GITHUB_STEP_SUMMARY  
            echo "**Reason:** ${{ steps.pr-check.outputs.reason }}" >> $GITHUB_STEP_SUMMARY
            echo "**Action:** PR awaiting manual review and approval" >> $GITHUB_STEP_SUMMARY
          fi
          echo "üìä [View Metrics Dashboard](https://github.com/${{ github.repository }}/blob/main/dashboard/index.html)" >> $GITHUB_STEP_SUMMARY