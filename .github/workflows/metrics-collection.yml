name: Release & Dependency Metrics Collection

on:
  # Trigger on all release-related events
  release:
    types: [published, edited, deleted]
  pull_request:
    types: [opened, closed]
    branches: [main]
  schedule:
    # Daily dependency health check at 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      report_type:
        description: 'Type of metrics report to generate'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - release-frequency
        - dependency-health
        - automation-efficiency
      period:
        description: 'Analysis period (days)'
        required: false
        default: '30'
        type: string

permissions:
  contents: read
  pull-requests: read
  actions: read
  repository-projects: write

jobs:
  collect-metrics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install requests pygithub python-dateutil matplotlib seaborn pandas

      - name: Collect Release Metrics
        id: release-metrics
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          REPORT_TYPE: ${{ inputs.report_type || 'scheduled' }}
          ANALYSIS_PERIOD: ${{ inputs.period || '30' }}
          TRIGGER_EVENT: ${{ github.event_name }}
        run: |
          python3 .github/scripts/metrics_collector.py

      - name: Generate Health Report
        if: github.event_name == 'schedule' || inputs.report_type == 'full' || inputs.report_type == 'dependency-health'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY: ${{ github.repository }}
        run: |
          python3 .github/scripts/dependency_health.py

      - name: Upload Metrics Data
        uses: actions/upload-artifact@v4
        with:
          name: release-metrics-${{ github.run_id }}
          path: |
            metrics/
            reports/
          retention-days: 90

      - name: Update Metrics Dashboard
        if: github.event_name == 'schedule' || github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 .github/scripts/update_dashboard.py

      - name: Post Metrics Summary
        run: |
          if [[ -f "reports/metrics_summary.md" ]]; then
            cat reports/metrics_summary.md >> $GITHUB_STEP_SUMMARY
          else
            echo "## ðŸ“Š Metrics Collection Complete" >> $GITHUB_STEP_SUMMARY
            echo "Metrics data collected and stored for analysis." >> $GITHUB_STEP_SUMMARY
            echo "**Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
            echo "**Analysis Period**: ${{ inputs.period || '30' }} days" >> $GITHUB_STEP_SUMMARY
          fi